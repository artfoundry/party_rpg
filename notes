data structures:
     "mapData" - 2D array of hashes (first array is rows, each subarray is columns)
         - each hash represents a tile and contains:
           -"tileNum" integer for the number of tile (internal use)
           -"edges" array with four objects containing edgeType (number) and adjTile (tile object from mapData)
           -"path" array of tile objects from mapData, in order of pathing, starting from start tile
           -Boolean for on/off path
           -Int indicating the tile file name (ie if there are multiple skins or exit types for each tile type)
           -Int indicating any item in the space
           -Int indicating any character in the space
           -Int indicating any decoration in the space
     "pathData" - array of 4 cells containing either "wall" or an object containing an adjacent tile hash object from mapData and another array in the path
     matrix of tile types - 2D array
         - Each cell of main array contains tile type
         - Each subarray lists the tile types that can work with that tile
     character data - hash containing:
         - class
         - gender(?)
         - str
         - dex
         - spirit
         - hp
         - sp
         - attack
         - defense
         - skill 1 level
         - skill 2 level
         - skill 3 level
         - inventory array
     item data - hash containing:
         - type
         - name
         - stat
         - sell cost
         - buy cost
         - special attr
     monster data - hash containing:
         - class
         - str
         - dex
         - spirit
         - hp
         - sp
         - attack
         - defense
         - skill level
         - inventory array

 dungeon map randomization:
     1) Use a tree search algorithm to inspect each cell for non-walls.
     2) Upon finding one, place random tile walls in adjacent cell and repeat with newly placed cell.
        - walls either match adjacent tile walls or are wall when no adjacent tile
     3) Once a dead end is reached return to previous branch.
     4) Track path by noting whether a cell is part of the path.
 - visual tile is made up of wall images with one large floor image for all tiles (and individual floor tiles for unique rooms)